@model AWEElectronics.ViewModel.ProductViewModel

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Product</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit" method="post" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="ProductGroupId" class="control-label"></label>
                <select asp-for="ProductGroupId" class="form-control" asp-items="Model.ProductGroups">
                    <option value="">-- Select Product Group --</option>
                </select>
                <span asp-validation-for="ProductGroupId" class="text-danger"></span>
            </div>


            <div class="form-group">
                <label asp-for="Price" class="control-label"></label>
                <input asp-for="Price" class="form-control" />
                <span asp-validation-for="Price" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label>Current Image</label><br />
                @if (Model.ImageBytes != null)
                {
                    <img src="data:image/png;base64,@Convert.ToBase64String(Model.ImageBytes)" width="150" />
                }
                else
                {
                    <p>No image uploaded</p>
                }
            </div>

            <div class="form-group">
                <label asp-for="ImageFile" class="control-label"></label>
                <input asp-for="ImageFile" class="form-control" type="file" />
                <span asp-validation-for="ImageFile" class="text-danger"></span>
            </div>


            <div class="form-group">
                <label asp-for="Availability" class="control-label"></label>
                <input asp-for="Availability" class="form-control" />
                <span asp-validation-for="Availability" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        async function loadProductGroups() {

            try {
                const response = await fetch('/api/ProductGroups');
                if (!response.ok) throw new Error('Failed to load product groups');

                const groups = await response.json();
                const select = document.getElementById('ProductGroupId');

                groups.forEach(group => {
                    const option = document.createElement('option');
                    option.value = group.id;
                    option.textContent = group.name;
                    select.appendChild(option);
                });

            } catch (err) {
                console.error(err);
            }
        }

        document.addEventListener('DOMContentLoaded', loadProductGroups);
    </script>
}


